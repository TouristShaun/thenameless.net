import { Icon as PhosphorIcon } from '@phosphor-icons/react';
import {
  ArrowUpRight,
  BookOpen,
  GithubLogo,
  RedditLogo,
  TwitterLogo,
  YoutubeLogo,
} from '@phosphor-icons/react/dist/ssr';
import Link from 'next/link';

import s from './link.module.scss';

interface Props {
  href: string;
  children: React.ReactNode;
  className?: string;
  showIcon?: boolean;
}

const Component = ({ href, children, className, showIcon = true }: Props) => {
  const internal = /^(\.?\/|#)/.test(href);

  let Icon: PhosphorIcon | React.FunctionComponent | undefined;
  if (!internal && showIcon) {
    if (exps.arxiv.test(href)) {
      Icon = ArxivLogo;
    } else if (exps.github.test(href)) {
      Icon = GithubLogo;
    } else if (exps.huggingface.test(href)) {
      Icon = HuggingFaceLogo;
    } else if (exps.reddit.test(href)) {
      Icon = RedditLogo;
    } else if (exps.twitter.test(href)) {
      Icon = TwitterLogo;
    } else if (exps.wikipedia.test(href)) {
      Icon = BookOpen;
    } else if (exps.youtube.test(href)) {
      Icon = YoutubeLogo;
    } else {
      Icon = ArrowUpRight;
    }
  }
  // github, arxiv, twitter

  return (
    <Link
      className={[s.link, className ?? ''].join(' ')}
      href={href}
      rel={internal ? undefined : 'noopener noreferrer'}
      target={internal ? undefined : '_blank'}
    >
      {children}
      {!!Icon && <Icon weight="bold" />}
    </Link>
  );
};
export default Component;

const exps = {
  arxiv: /^https?:\/\/(www\.)?arxiv\.org/,
  github: /^https?:\/\/(www\.)?github\.com/,
  huggingface: /^https?:\/\/(www\.)?huggingface\.co/,
  reddit: /^https?:\/\/(www\.)?(old\.)?reddit\.com/,
  twitter: /^https?:\/\/(www\.)?(x\.com|twitter\.com|t\.co)/,
  wikipedia: /^https?:\/\/([a-z]{1,3}\.)?wikipedia\.org/,
  youtube: /^https?:\/\/(www\.)?(youtu\.be|youtube\.com|t\.co)/,
};

const ArxivLogo = ({ color = 'currentColor' }: { color?: string }) => {
  const bg = 'white';

  return (
    <svg
      className={s.arxiv}
      viewBox="0 0 17.732 24.269"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g transform="translate(-566.984 -271.548)" stroke={color}>
        <path
          d="m573.549 280.916 2.266 2.738 6.674-7.84c.353-.47.52-.717.353-1.117a1.218 1.218 0 0 0 -1.061-.748.953.953 0 0 0 -.712.262z"
          fill={bg}
        />
        <path
          d="m579.525 282.225-10.606-10.174a1.413 1.413 0 0 0 -.834-.5 1.09 1.09 0 0 0 -1.027.66c-.167.4-.047.681.319 1.206l8.44 10.242-6.282 7.716a1.336 1.336 0 0 0 -.323 1.3 1.114 1.114 0 0 0 1.04.69.992.992 0 0 0 .748-.365l8.519-7.92a1.924 1.924 0 0 0 .006-2.855z"
          fill={bg}
        />
        <path
          d="m584.32 293.912-8.525-10.275-2.265-2.737-1.389 1.254a2.063 2.063 0 0 0 0 2.965l10.812 10.419a.925.925 0 0 0 .742.282 1.039 1.039 0 0 0 .953-.667 1.261 1.261 0 0 0 -.328-1.241z"
          fill={bg}
        />
      </g>
    </svg>
  );
};

const HuggingFaceLogo = ({ color = 'currentColor' }: { color?: string }) => {
  return (
    <svg
      className={s.huggingface}
      viewBox="0 0 32 32"
      xmlns="http://www.w3.org/2000/svg"
    >
      <g fill={color}>
        <path d="m3 15.9989c0-3.6703 1.10595-6.90979 3.23462-9.22131 2.11626-2.29803 5.33348-3.77759 9.76428-3.77759 4.4307 0 7.648 1.47956 9.7642 3.77759 2.1287 2.31152 3.2347 5.55101 3.2347 9.22131 0 .4202-.0145.8349-.0434 1.2431.3287.1788.6017.4472.7862.7723.418.0502.7964.2292 1.0942.4963.1089-.8196.163-1.659.163-2.5117 0-4.0611-1.2263-7.82105-3.7635-10.57614-2.5495-2.76857-6.3317-4.42276-11.2354-4.42276s-8.6859 1.65419-11.23548 4.42276c-2.53716 2.75509-3.76342 6.51504-3.76342 10.57614 0 .8533.05414 1.6933.1632 2.5135.29811-.2681.67722-.4478 1.09615-.4981.18412-.3244.45633-.5923.78411-.7712-.02893-.4086-.04346-.8236-.04346-1.2442z" />
        <path d="m12.668 28.6862c-.4683.6818-1.11 1.2353-1.8615 1.5968 1.5578.466 3.2908.7148 5.1924.7148 1.9022 0 3.6356-.2489 5.1938-.7153-.7513-.3615-1.3928-.915-1.861-1.5967-1.0236.2036-2.1338.312-3.3328.312-1.1983 0-2.3079-.1083-3.3309-.3116z" />
        <path d="m9.34896 9.41252c-.20925.22799-.31932.53107-.3674.77838-.10542.5421-.63036.8961-1.17249.7907s-.89616-.6303-.79074-1.17247c.08863-.45584.30993-1.15276.85718-1.749.57718-.62883 1.44013-1.06013 2.62439-1.06013 1.1956 0 2.0621.45218 2.6358 1.08196.5442.59744.7705 1.29202.8495 1.74695.0945.54409-.27 1.06189-.8142 1.15639-.5441.0944-1.0618-.2701-1.1563-.8142-.0343-.19742-.1394-.50284-.3575-.74232-.1887-.20713-.5155-.42878-1.1573-.42878-.65292 0-.97161.21714-1.15094.41252z" />
        <path d="m20.3492 9.41252c-.2093.22799-.3193.53107-.3674.77838-.1054.5421-.6304.8961-1.1725.7907s-.8961-.6303-.7907-1.17247c.0886-.45584.3099-1.15276.8572-1.749.5771-.62883 1.4401-1.06013 2.6244-1.06013 1.1955 0 2.0621.45218 2.6357 1.08196.5443.59744.7705 1.29202.8495 1.74695.0945.54409-.27 1.06189-.8141 1.15639-.5442.0944-1.0619-.2701-1.1564-.8142-.0342-.19742-.1393-.50284-.3575-.74232-.1887-.20713-.5155-.42878-1.1572-.42878-.653 0-.9717.21714-1.151.41252z" />
        <path d="m8.40006 14.2c.44183-.3314 1.06863-.2418 1.4.2.29804.3973 1.99214 2.1 6.20004 2.1 4.2078 0 5.902-1.7027 6.2-2.1.3313-.4418.9581-.5314 1.4-.2.4418.3314.5313.9582.2 1.4-.702.936-3.0079 2.9-7.8 2.9-4.7922 0-7.09804-1.964-7.80004-2.9-.33137-.4418-.24183-1.0686.2-1.4z" />
        <path d="m28.9903 19.1395c.039-.2778-.0384-.5703-.2376-.798-.3637-.4156-.9955-.4577-1.4111-.0941l-3.7624 3.2922-.0791-.0396c0-.4129.0379-.7878.0719-1.125.0897-.8876.1529-1.5126-.572-1.875-1.3379-.6688-1.9517 1.5635-2.3633 3.7433-.0936.4958-.3196.9542-.5718 1.3912-1.33 2.3039-.0658 4.6148.9352 5.3655 1.7888 1.3417 3.5 1 5 0 .9075-.6049 2.6345-1.8198 3.9272-2.7366.5624-.3989.629-1.2072.1415-1.6947-.3396-.3396-.8584-.4238-1.288-.209l-.1256.0628 1.9851-1.6543c.4243-.3535.4816-.9841.128-1.4084-.2303-.2763-.5781-.397-.9099-.3498l.2925-.2507c.4193-.3595.4679-.9908.1085-1.4101-.3211-.3745-.859-.4533-1.2691-.2097z" />
        <path d="m3.01052 19.1395c-.03901-.2778.03844-.5703.23766-.798.36368-.4156.99545-.4577 1.41108-.0941l3.76242 3.2922.07908-.0396c0-.4129-.03789-.7879-.07195-1.125-.08967-.8876-.15282-1.5126.572-1.875 1.33799-.6688 1.95179 1.5635 2.36329 3.7433.0936.4958.3196.9542.5719 1.3912 1.3299 2.3039.0658 4.6148-.9352 5.3655-1.78889 1.3417-3.50008 1-5.00008 0-.90743-.6049-2.63449-1.8198-3.92717-2.7366-.56239-.3989-.62901-1.2072-.14148-1.6947.3396-.3396.85839-.4238 1.28795-.209l.12565.0628-1.9851-1.6543c-.424274-.3535-.481598-.9841-.12803-1.4084.23029-.2763.57811-.397.9099-.3498l-.29247-.2507c-.41933-.3595-.46789-.9908-.10847-1.4101.32103-.3745.85897-.4533 1.26902-.2097z" />
      </g>
    </svg>
  );
};
