@use '@/styles/token' as t;

.wrapper {
  --base-color: #{t.$gray-9};
  --primary-color: #{t.$violet-5};
  --secondary-color: #{t.$purple-2};
  --tertiary-color: #{t.$purple-1};

  --label: var(--base-color);
  --deselected: var(--secondary-color);
  --deselected-pressed: #{t.$purple-3};
  --selected: var(--primary-color);
  --selected-pressed: #{t.$violet-6};
  --checkmark: white;
  --invalid: var(--base-color);
  --invalid-pressed: var(--base-color);

  display: flex;
  align-items: center;
  gap: t.$space-2;
  color: var(--label);
  cursor: pointer;

  .checkbox {
    block-size: 1.143rem;
    inline-size: 1.143rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1.5px solid var(--deselected);
    transition: all 150ms;
  }

  & svg {
    block-size: 1rem;
    inline-size: 1rem;
    fill: none;
    stroke: var(--checkmark);
    stroke-dasharray: 22px;
    stroke-dashoffset: 66;
    stroke-width: 3px;
    transition: all 150ms;
  }

  &[data-pressed] .checkbox {
    border-color: var(--deselected-pressed);
  }

  &[data-selected],
  &[data-indeterminate] {
    .checkbox {
      border-color: var(--selected);
      background: var(--selected);
    }

    &[data-pressed] .checkbox {
      border-color: var(--selected-pressed);
      background: var(--selected-pressed);
    }

    & svg {
      stroke-dashoffset: 44;
    }
  }

  &[data-invalid] {
    .checkbox {
      border-color: var(--invalid);
    }

    &[data-pressed] .checkbox {
      border-color: var(--invalid-pressed);
    }

    &[data-selected],
    &[data-indeterminate] {
      .checkbox {
        background: var(--invalid);
      }

      &[data-pressed] .checkbox {
        background: var(--invalid-pressed);
      }
    }
  }

  &[data-indeterminate] {
    & svg {
      stroke: none;
      fill: var(--checkmark);
    }
  }

  &[data-focus-visible] .checkbox {
    box-shadow:
      0 0 0 2px white,
      0 0 0 4px var(--selected);
  }

  &[data-disabled] {
    opacity: 0.4;
    cursor: not-allowed;
  }
}

.label {
  @include t.font(16, 20);
  font-family: t.$font-body;
}
